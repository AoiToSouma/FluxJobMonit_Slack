#Provides notification functions to keep Flux Monitor healthy.
#If an issue occurs, it will be notified to Slack and Validator will be immediately aware of the issue.
#Please make the following settings appropriately and enable various monitoring functions.

##############################################################################################################
#
# 0. Basic settings for notifications
#
##############################################################################################################
#SLACK_WEBHOOK_URL      : (Required item)specifies the Slack webhook URL. 
SLACK_WEBHOOK_URL="YOUR_WEBHOOK_URL"

#MONITOR_NAME           : (Required item)Server name for notification.
HOST_NAME=$(hostname -f)
IP_ADDRESS=$(ip addr show | grep -oP '(?<=inet\s)\d+(\.\d+){3}' | grep -v '127.0.0.1' | head -n1)
MONITOR_NAME="${HOST_NAME}"_"${IP_ADDRESS}"

#POLLING_INTERVAL       : (Required item)Monitoring interval time (s).
#                         sleep time to reduce the load of continuous execution.
POLLING_INTERVAL=30

##############################################################################################################
#
# 1. Function to detect error information that occurred in JOB from PostgreSQL
#-------------------------------------------------------------------------------------------------------------
# You can detect errors for each JOB that have occurred since the last check.
#
##############################################################################################################
#DB_ERROR_TIMER         : Interval to retrieve error records from DB(table_name:job_spec_errors) (s)
#                         If you specify 0, the setting will be disabled.
DB_ERROR_TIMER=120

##############################################################################################################
#
# 2. Function to detect various errors that occur in Plugin Node from log files.
#-------------------------------------------------------------------------------------------------------------
# You can detect error messages that have been output to the log file since the last check.
# If the word specified below is included, it will be detected as an error and the result will be output to a file.
# Search words are defined in GREP_BLACK_LIST.
# Furthermore, search words to be excluded are defined in GREP_WHITE_LIST.
#
# It is also possible to set the file to be output periodically and not receive notifications.
#
##############################################################################################################
#LOG_ERROR_TIMER        : Interval to retrieve error messages from log files (S)
#                         If an error log has occurred since the last check, record the detected log to a file.
#                         If you specify 0, the setting will be disabled.
LOG_ERROR_TIMER=1800

#LOG_ERROR_NOTICE       : Whether to notify when a error log is detected (true or false)
#                         Valid only if LOG_ERROR_TIMER is non-zero.
#                         If true, notify when error log is detected.
#                         If false, only output error log to file.
LOG_ERROR_NOTICE=true

#PLI_LOG_FILE           : Log file to search.
#                         Required if LOG_ERROR_TIMER is not non-zero.
PLI_LOG_FILE=$HOME/.pm2/logs/NodeStartPM2-error.log

#GREP_BLACK_LIST        : File name to retrieve pattern with "grep" command.
#                         "grep -f $GREP_BLACK_LIST"
GREP_BLACK_FILE=$(cd $(dirname $0);pwd)/grep_black_list.txt

#GREP_WHITE_LIST        :ã€€File name to retrieve exclusion patterns using "grep" command.
#                         "grep -v -f $GREP_WHITE_LIST"
GREP_WHITE_FILE=$(cd $(dirname $0);pwd)/grep_white_list.txt

#LOG_DIR                : Directory to output error logs.
#                         Required if LOG_ERROR_TIMER is not non-zero.
LOG_DIR=$(cd $(dirname $0);pwd)/fm_log

#ERR_LOG_PREFIX         : Prefix for error logs to create.
#                         Required if LOG_ERROR_TIMER is not non-zero.
ERR_LOG_PREFIX="fm_err_"

##############################################################################################################
#
# 3. Function to detect stagnation in JOB execution
#-------------------------------------------------------------------------------------------------------------
# Checks the elapsed time since the latest JOB was executed and notifies you
# if the time exceeds the set threshold.
# Monitoring is performed using two parameters: checking interval and threshold.
# We recommend that the threshold value is greater than or equal to the total time of 
# Flux Monitor's idleTimerPeriod (or drumbeatSchedule) + maxTaskDuration.
#
##############################################################################################################
#ROUND_STAGNATION_TIMER : Interval timer for round stagnation (s)
#                         Notify if this amount of time has passed since the last JOB round was run.
#                         If you specify 0, the setting will be disabled.
ROUND_STAGNATION_TIMER=0

#STAGNATION_THRESHOLD   : Threshold for elapsed time since the most recent JOB round was executed.
#                         Assuming a time equivalent to IdleTimer+maxTaskDuration.
#                         Required if ROUND_STAGNATION_TIMER is not non-zero.
STAGNATION_THRESHOLD=3650

##############################################################################################################
#
# 4. Function to periodically notify job execution status
#-------------------------------------------------------------------------------------------------------------
# Regardless of errors, the latest JOB processing ID will be notified.
# Healthy nodes do not receive error notifications, so they play the role of monitoring
#  whether they are alive or not by sending periodic notifications.
#
##############################################################################################################
#PERIODIC_NOTICE_TIMER  : Periodic job execution status notification (s) 
#                         Notifies you of the operating status regardless of whether the job is stopped.
#                         If you specify 0, the setting will be disabled.
PERIODIC_NOTICE_TIMER=0

##############################################################################################################
#
# 5. Function to notify the balance of Node address 
#-------------------------------------------------------------------------------------------------------------
# You will be notified if the node address balance (XDC) falls below the set threshold.
# This will encourage proper replenishment, as insufficient balance will prevent on-chain operations.
#
##############################################################################################################
#ADR_BLC_TIMER          : Interval to check address balance (S)
#                         The address will be assigned to the first one registered.
#                         If you specify 0, the setting will be disabled.
ADR_BLC_TIMER=3600

#ADR_BLC_THRESHOLD      : Notify when address balance falls below this value.
#                         Required if ADR_BLC_TIMER is not non-zero.
ADR_BLC_THRESHOLD=10.0


##############################################################################################################
#
# 6. Function to change and restart RPC/WS when a network error occurs 
#-------------------------------------------------------------------------------------------------------------
# If logs related to network errors occur in "pm2 log" for the specified period, 
# change httpUrl and wsUrl in config.toml and restart.
# Comment lines (#...) in config.toml are ignored.
# The httpUrl and wsUrl specified in the current config.toml must exist in the list.
# An error will occur if it does not exist.
##############################################################################################################
#NET_ERR_NOTICE_TIMER   : Network error check interval (s).
#                         If you specify 0, the setting will be disabled.
NET_ERR_NOTICE_TIMER=0

#CONFIG                 : path of config.toml.
CONFIG=~/pluginV2/config.toml

#NET_ERROR_LIST         : Log messages for Network error detection.
#                         Valid only if NET_ERROR_NOTICE is true.
NET_ERROR_LIST=$(cd $(dirname $0);pwd)/net_err_list.txt

#NET_AUTO_CHANGE        : Whether to automatically change config.toml to another RPC/WS when an RPC/WS error
#                         is detected (true or false)
NET_AUTO_CHANGE=true

#CHANGE_COUNT_LIMIT     : Maximum number of times to repeat the change if the error still occurs after the change.
#                         Required if NET_ERR_NOTICE_TIMER is not non-zero.
CHANGE_COUNT_LIMIT=4

#CHECK_ERR_WAIT         : Duration to check error log.
CHECK_ERR_WAIT=10

#URL_LIST               : List defining RPC and WS
URL_LIST=(
    "https://erpc.xinfin.network,wss://ews.xinfin.network"
    "https://earpc.xinfin.network,wss://eaws.xinfin.network"
    "https://rpc.primenumbers.xyz/,wss://ws.xinfin.network"
)
